.hero{
    background: linear-gradient(180deg, var(--ziri-blue) 0%, var(--ziri-blue) 50%, white 50%);
    padding-block: 30px;
}
.heroContent{
    width: 94%;
    margin: 0 auto;
    background-color: white;
    box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
    border-radius: 40px;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    gap: 10px;
    padding-block: 30px;
}
.logo{
    width: 50%;
    color: var(--ziri-blue-200);
}
.heroHorizontal{
    display: grid;
    grid-template-columns: 1fr 1fr;
    padding-inline: 20px;
    gap: 20px;
    box-sizing: border-box;
}
.heroTitle{
    font-size: 1.8rem;
    color: var(--ziri-blue-200);
    font-weight: 300;
}
.heroSubtitle{
    margin-top: 10px;
    font-size: 1rem;
    font-weight: 200;
}
.heroImage{
    width: 130%;
    height: 300px;
    margin-block: auto;
    /* background-color: red; */
    border-radius: 20px;
    object-fit: cover;
}

.content{
    margin: 0 auto;
    padding-block: 30px;
    padding-inline: 20px;
    background: white;
    display: flex;
    flex-direction: column;
    gap: 10px;
    font-weight: 300;
    font-size: 1rem;
}
.content > h3 {
    color: var(--ziri-blue-200);
    font-size: 1.5rem;
    font-weight: 300;
    text-align: center;
    margin: 0;
}
.link{
    display: flex;
    gap: 10px;
    align-items: center;
    color: var(--ziri-blue-200);
}
.steps{
    position: relative;
    margin: 0px;
}
/* Define the counter */
.content > ol {
    counter-reset: steps;
    list-style: none;
}

/* Increment the counter for each list item */
.content > ol li {
    position: relative;
    margin-block: 16px;
    counter-increment: steps;
}

/* Display the counter value before each list item */
.content > ol li:before {
    position: absolute;
    left: -36px;
    top: -1px;
    display: inline-flex;
    align-items: center;
    justify-content: center;
    width: 24px;
    height: 24px;
    font-size: 18px;
    background: var(--ziri-blue-200);
    color: white;
    border-radius: 100px;
    margin-right: 4px;
    content: counter(steps); /* Add a period after the counter value */
}
.bgIcon{
    position: absolute;
    bottom: 0;
    left: 0;
    transform: translate(-50%, 50%);
    width: 70%;
    height: auto;
    color: var(--ziri-blue-200);
    opacity: 0.1;
    transition: transform 0.3s;
}
.bgIcon:hover{
    transform: translate(-50%, 50%) rotate(45deg);
}

.horizontal{
    display: grid;
    grid-template-columns: 1fr 1fr;
    gap: 20px;
    padding-bottom: 10px;
}
.horizontal .link {
    margin-top: 8px;
    margin-bottom: auto;
}
.readMoreImage{
    position: relative;
    width: 110%;
    margin-left: 10%;
    height: 90px;
    border-radius: 10px;
    overflow: hidden;
    background: var(--ziri-blue-200);
    transition: all 0.1s;
    opacity: 1;
}
.readMoreImage img{
    transition: all 0.1s;
    opacity: 1;
}
.readMoreImage:hover img{
    opacity: 0;
}

.readMoreContent{
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    color: white;
    opacity: 0;
    transition: all 0.1s;
    user-select: none;
}
.readMoreContent svg{
    scale: 1.4;
}
.readMoreImage:hover .readMoreContent{
    opacity: 1;
}