import { useSearchParams } from 'next/navigation';
import styles from './circularityPossibilities.module.css';

export default function CircularityPossibilities() {

    const searchParams = useSearchParams();
    const name = searchParams.get('name');
    const email = searchParams.get('email');
    if (!name || !email) return null;

    const data = [
        {
            icon: <svg className={styles.icon} viewBox="0 0 100 100" xmlns="http://www.w3.org/2000/svg">
            <path d="M77.679 49.6201C78.259 50.1401 78.999 50.5501 79.399 51.1801C82.569 56.2301 85.769 61.2701 88.769 66.4201C91.979 71.9301 88.269 78.2801 81.869 78.3201C71.919 78.3801 61.969 78.3401 52.019 78.3401C51.069 78.3401 50.119 78.3401 49.169 78.3401L48.879 79.0201C51.819 81.6901 54.759 84.3601 57.699 87.0301C57.579 87.2901 57.459 87.5501 57.329 87.8101C56.629 87.5901 55.769 87.5601 55.259 87.1301C52.029 84.4101 48.889 81.5701 45.679 78.8201C44.509 77.8201 44.489 77.0401 45.679 76.0301C48.969 73.2501 52.189 70.3801 55.479 67.6001C55.899 67.2501 56.599 67.2201 57.159 67.0401C56.999 67.6601 57.039 68.4901 56.639 68.8701C54.659 70.7501 52.559 72.5101 50.509 74.3201C49.909 74.8501 49.349 75.4101 48.389 76.3101C49.499 76.4901 50.089 76.6701 50.689 76.6701C60.719 76.6901 70.749 76.7201 80.789 76.6701C85.559 76.6401 88.429 73.8801 87.949 69.7901C87.809 68.6201 87.209 67.4401 86.579 66.4001C83.809 61.7901 80.949 57.2301 78.139 52.6301C77.689 51.8901 77.319 51.1001 76.909 50.3301L77.659 49.6401L77.679 49.6201Z" fill="currentColor"/>
            <path d="M33.4988 52.4401C32.5888 48.5601 31.6888 44.6801 30.7788 40.8001C30.5388 40.7701 30.3088 40.7401 30.0688 40.7101C24.4488 49.9501 18.7088 59.1201 13.2988 68.4701C11.6788 71.2701 13.6988 75.0501 16.8488 76.0801C18.0788 76.4901 19.4488 76.6201 20.7488 76.6401C25.4688 76.7001 30.1988 76.6601 34.9188 76.6701C35.7688 76.6701 36.6288 76.8001 37.4788 76.8601C37.5188 77.1201 37.5588 77.3801 37.5888 77.6401C36.9488 77.8701 36.3088 78.2801 35.6688 78.2901C29.9488 78.3401 24.2288 78.4401 18.5188 78.2801C12.8388 78.1101 8.70879 71.7601 12.4088 65.8901C17.3988 57.9801 22.2488 49.9801 27.1488 42.0101C27.6088 41.2601 27.9988 40.4601 28.5988 39.3501C24.0488 39.7001 20.4088 42.4701 16.1988 42.3501C16.1088 42.1101 16.0088 41.8701 15.9188 41.6301C16.5488 41.2501 17.1388 40.7401 17.8188 40.5101C21.7388 39.2001 25.6888 38.0001 29.5988 36.6601C30.9888 36.1901 31.8788 36.3801 32.1988 37.8801C33.0988 42.0701 33.9788 46.2701 34.8088 50.4801C34.9188 51.0401 34.6588 51.6801 34.5688 52.2801C34.2088 52.3301 33.8488 52.3701 33.4888 52.4201L33.4988 52.4401Z" fill="currentColor"/>
            <path d="M72.889 40.3001C73.979 35.6901 74.909 31.7401 75.839 27.7901C76.209 27.8501 76.569 27.9101 76.939 27.9701C76.989 28.7001 77.189 29.4701 77.059 30.1701C76.309 34.0601 75.449 37.9301 74.669 41.8201C74.329 43.5201 73.639 44.2001 71.759 43.5101C67.879 42.0901 63.899 40.9201 59.999 39.5601C59.409 39.3501 58.969 38.7101 58.459 38.2701C59.159 38.1401 59.929 37.7601 60.549 37.9401C63.769 38.8601 66.949 39.9301 70.509 40.4601C70.099 39.7001 69.729 38.9301 69.279 38.2001C65.469 31.9901 61.649 25.7701 57.809 19.5701C53.919 13.3001 47.149 13.2601 43.229 19.4901C41.159 22.7901 39.159 26.1301 37.069 29.4201C36.639 30.1001 35.969 30.6401 35.409 31.2401L34.729 30.8501C34.919 30.1501 34.969 29.3701 35.329 28.7701C37.499 25.1401 39.659 21.5101 41.979 17.9701C46.329 11.3201 54.719 11.3401 59.009 18.0501C63.069 24.4001 66.939 30.8801 70.899 37.2901C71.399 38.1101 71.969 38.8901 72.899 40.2801L72.889 40.3001Z" fill="currentColor"/>
            </svg>,
            text: 'Recycle',
            image: '/Recycling.png',
        },
        {
            icon: <svg className={styles.icon} viewBox="0 0 100 100" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M14.4801 36.2527C16.0001 36.4427 16.9401 36.6627 17.8701 36.6627C24.0101 36.6927 30.1501 36.6427 36.2901 36.7327C37.0201 36.7327 37.7501 37.3927 38.4701 37.7527C37.7401 38.1227 37.0101 38.7927 36.2701 38.8027C28.6401 38.8827 21.0101 38.8327 13.3701 38.8627C11.6601 38.8627 10.9901 38.1227 11.0001 36.4627C11.0301 28.8327 10.9801 21.2027 11.0601 13.5827C11.0601 12.8627 11.7401 12.1527 12.1001 11.4327C12.4001 12.1927 12.9601 12.9627 12.9701 13.7327C13.0501 19.2027 13.0001 24.6727 13.0301 30.1527C13.0301 31.0927 13.2501 32.0327 13.4601 33.7327C15.5301 31.0827 17.1401 29.0227 18.7301 26.9527C27.0501 16.1527 38.1301 10.8627 51.6701 11.0027C69.8701 11.1927 86.1001 25.5327 89.1901 43.4727C93.0701 66.0227 77.9701 86.4527 56.1301 89.4927C39.7601 91.7727 25.3401 84.8627 16.6701 70.9127C16.4101 70.4927 16.0801 70.0627 15.9901 69.5927C15.9201 69.1827 16.0101 68.4927 16.2701 68.3427C16.5801 68.1627 17.3101 68.2527 17.5801 68.5127C18.1601 69.0827 18.5601 69.8327 19.0301 70.5127C27.0301 82.2327 37.9601 88.0527 52.3001 87.6027C69.2801 87.0727 84.6901 73.8027 87.2801 56.1927C90.3801 35.1027 76.1901 16.5827 55.8201 13.6327C41.9301 11.6227 30.4101 16.5027 21.3601 27.1527C19.0201 29.9027 16.9901 32.9127 14.4801 36.2527Z" fill="currentColor"/>
            </svg>,
            text: 'Return to us',
            image: '/Labels.png',
        },
        {
            icon: <svg className={styles.icon} viewBox="0 0 100 100" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M49.6949 89.8401C40.3649 89.8401 31.0249 89.8501 21.6949 89.8401C14.9749 89.8301 10.1149 85.2401 10.0649 78.5301C9.96486 65.3501 9.98486 52.1601 10.0949 38.9701C10.1149 37.1301 10.7249 35.2101 11.4549 33.4801C13.6049 28.3601 15.9249 23.3101 18.2049 18.2501C20.3549 13.4601 23.9749 10.9801 29.3549 11.0001C43.0249 11.0501 56.6849 11.0401 70.3549 11.0001C75.6049 10.9801 79.2349 13.3601 81.3649 18.0601C83.7249 23.2701 86.1549 28.4501 88.3149 33.7501C89.1049 35.6901 89.5649 37.9101 89.5849 40.0001C89.6949 52.5201 89.5649 65.0401 89.6649 77.5701C89.7249 85.2101 84.1749 90.2201 77.1949 89.9401C68.0449 89.5801 58.8649 89.8501 49.7049 89.8501L49.6949 89.8401ZM49.9649 38.6901C38.3849 38.6901 26.8149 38.7101 15.2349 38.6701C13.3949 38.6701 12.2549 38.9801 12.2649 41.2201C12.3349 53.4901 12.2049 65.7501 12.3449 78.0201C12.4149 84.3701 16.0749 87.6801 22.4649 87.6801C40.5349 87.6801 58.6049 87.5401 76.6749 87.7601C82.5549 87.8301 87.4649 84.7301 87.3949 77.0401C87.2949 65.3601 87.3749 53.6701 87.3649 41.9801C87.3649 38.7801 87.2649 38.6901 83.9349 38.6901C72.6049 38.6901 61.2849 38.6901 49.9549 38.6901H49.9649ZM86.6749 36.4401C86.5949 35.7501 86.6249 35.3901 86.5049 35.1101C83.9149 29.2901 81.4249 23.4301 78.6549 17.7001C77.2149 14.7201 74.4549 13.2401 71.1349 13.2001C65.1449 13.1201 59.1549 13.2201 53.1649 13.1401C51.4449 13.1201 50.7649 13.7101 50.7749 15.4201C50.8149 21.7101 50.8249 28.0001 50.7749 34.2901C50.7549 36.0901 51.5849 36.4901 53.2149 36.4701C58.7049 36.4001 64.1949 36.4401 69.6849 36.4401C75.2449 36.4401 80.8049 36.4401 86.6649 36.4401H86.6749ZM12.7449 36.0601C13.4249 36.2701 13.6549 36.4001 13.8849 36.4001C24.9449 36.4201 36.0049 36.4001 47.0649 36.4501C48.5949 36.4501 48.8649 35.6301 48.8649 34.4201C48.8649 28.0501 48.8449 21.6801 48.8749 15.3001C48.8749 13.7301 48.2649 13.1201 46.6449 13.1301C40.5749 13.2001 34.4949 12.9501 28.4449 13.2801C26.3949 13.3901 23.6849 14.3501 22.5349 15.8601C17.9749 21.8901 16.0449 29.2601 12.7449 36.0501V36.0601Z" fill="currentColor"/>
            <path d="M41.1849 46.2501C43.5649 46.0701 46.0549 47.1701 48.0249 49.2201C49.3949 50.6401 50.2149 50.5201 51.6449 49.2201C57.3049 44.0401 65.7949 45.7301 68.6049 52.5601C70.1349 56.2801 69.8149 60.0501 67.0549 63.0201C62.3749 68.0701 57.4349 72.8901 52.4849 77.6801C50.6949 79.4201 48.7849 79.3101 46.9349 77.5101C42.1749 72.8701 37.4149 68.2401 32.8649 63.4001C29.7949 60.1401 29.3349 56.1601 31.2549 52.1101C33.0849 48.2501 36.2649 46.2601 41.1749 46.2501H41.1849ZM41.0649 48.4501C37.1949 48.4301 34.6549 50.0001 33.2449 53.0301C31.8049 56.1301 32.0549 59.2801 34.4649 61.8101C38.9349 66.5001 43.5849 71.0201 48.1549 75.6001C49.2149 76.6601 50.3049 76.8001 51.4149 75.6901C56.1149 70.9901 60.9149 66.3901 65.4549 61.5401C67.7349 59.1001 67.9249 55.9701 66.4349 52.9601C64.9949 50.0601 62.6049 48.5701 59.2649 48.4401C56.1049 48.3201 53.8249 49.8201 51.9449 52.0201C50.4049 53.8101 49.2249 53.7101 47.7249 51.9801C45.8949 49.8501 43.7049 48.2401 41.0849 48.4501H41.0649Z" fill="currentColor"/>
            </svg>,
            text: 'Donate',
            image: '/freeClothing.png',
        },
        {
            icon: <svg className={styles.icon} viewBox="0 0 100 100" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M28.88 16.01C32.53 16.01 36.18 15.99 39.83 16.01C42.85 16.03 45.46 17.01 47.65 19.21C56.12 27.74 64.67 36.2 73.13 44.74C77.32 48.97 77.47 54.4 73.3 58.69C66.54 65.65 59.67 72.51 52.7 79.26C48.55 83.28 43.03 83.19 38.91 79.13C30.22 70.58 21.64 61.92 13.02 53.3C10.83 51.11 10.05 48.36 10.03 45.38C9.99 38.42 9.99 31.45 10.03 24.49C10.06 18.78 12.93 16 18.68 16C22.08 16 25.48 16 28.88 16V16.01ZM12.1 35.19C12.1 38.59 12.23 42 12.06 45.39C11.9 48.46 13.03 50.8 15.16 52.9C23.36 61.01 31.48 69.19 39.66 77.32C43.79 81.43 47.95 81.48 52.05 77.42C58.65 70.89 65.22 64.32 71.76 57.71C75.39 54.04 75.44 49.69 71.84 46.04C63.38 37.49 54.91 28.95 46.28 20.57C44.92 19.25 42.7 18.19 40.83 18.12C32.96 17.85 25.08 17.92 17.2 18.04C13.85 18.09 12.13 20.11 12.1 23.48C12.07 27.38 12.1 31.27 12.1 35.17V35.19Z" fill="currentColor"/>
            <path d="M62.33 84.13C62.89 83.48 63.4 82.79 64 82.18C69.94 76.15 75.74 69.98 81.87 64.16C89.04 57.36 88.79 45.97 81.95 39.56C75.12 33.15 68.73 26.28 62.14 19.61C61.79 19.26 61.35 18.96 61.11 18.54C60.75 17.9 60.53 17.18 60.25 16.5C60.95 16.73 61.82 16.77 62.31 17.22C64.02 18.78 65.61 20.48 67.24 22.14C72.59 27.58 77.93 33.03 83.3 38.46C91 46.24 91.06 57.33 83.38 65.15C77.4 71.25 71.41 77.34 65.37 83.39C64.7 84.07 63.72 84.44 62.88 84.96C62.69 84.69 62.5 84.42 62.31 84.15L62.33 84.13Z" fill="currentColor"/>
            <path d="M27.2397 27.37C30.4997 27.37 33.0397 29.92 33.0497 33.18C33.0497 36.34 30.3397 39.03 27.1897 38.99C23.9797 38.95 21.4097 36.34 21.4097 33.12C21.4097 29.84 23.9297 27.36 27.2397 27.37ZM27.2197 37.24C29.2397 37.25 31.2197 35.33 31.2997 33.29C31.3897 31.15 29.3997 29.09 27.2397 29.08C25.0697 29.08 23.0697 31.11 23.1397 33.25C23.1997 35.26 25.2197 37.23 27.2097 37.24H27.2197Z" fill="currentColor"/>
            </svg>,            
            text: 'Resell',
            image: '/reselling.png',
        },
        {
            icon: <svg className={styles.icon} viewBox="0 0 100 100" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M52.6051 50.3333C48.6051 46.9633 44.7451 43.7233 40.9151 40.4633C39.4951 39.2533 38.8051 40.6833 38.0151 41.3033C32.3751 45.7133 25.0251 46.4233 18.8951 43.0933C12.3751 39.5633 9.3251 32.5033 10.1251 26.7833C11.3451 18.0433 16.4051 12.9833 24.0051 11.3233C32.2751 9.52328 44.0851 15.2433 44.2451 28.4033C44.2751 31.0733 42.9651 33.8233 41.9851 36.4233C41.5051 37.6833 41.3051 38.4033 42.4751 39.3633C45.8951 42.1233 49.2651 44.9433 52.5351 47.8733C53.8951 49.0933 54.8051 48.9133 56.1051 47.8033C66.0751 39.3133 76.0951 30.8833 86.1051 22.4233C86.2951 22.2633 86.4551 22.0033 86.6651 21.9433C87.3451 21.7533 88.0551 21.6233 88.7551 21.4733C88.4751 22.0733 88.3451 22.8433 87.8951 23.2533C85.0351 25.7733 82.1151 28.2233 79.2051 30.6933C67.1151 40.9133 55.0451 51.1633 42.9151 61.3333C41.5051 62.5133 41.4051 63.3633 42.2351 65.0433C45.4351 71.5533 44.9751 77.9033 40.3851 83.6333C35.8251 89.3233 29.6651 91.0833 22.7751 89.3333C15.6951 87.5333 11.6051 82.6733 10.2951 75.4233C8.9151 67.7533 13.7551 60.8333 18.5051 58.1333C24.4651 54.7433 31.8851 54.9333 37.3651 59.3633C39.4851 61.0733 40.7351 61.0933 42.6651 59.2233C45.3351 56.6233 48.3351 54.3733 51.1651 51.9533C51.6451 51.5433 52.0251 51.0133 52.6251 50.3333H52.6051ZM27.2951 13.0533C18.6251 13.0433 12.0251 19.4533 11.9951 27.9133C11.9651 36.6033 18.5251 43.2933 27.0851 43.3033C35.5951 43.3033 42.2551 36.7033 42.2751 28.2533C42.2851 19.6433 35.8151 13.0733 27.3051 13.0533H27.2951ZM27.2951 57.8333C18.6251 57.8233 12.0251 64.2333 11.9951 72.6833C11.9651 81.3833 18.5251 88.0733 27.0851 88.0733C35.5851 88.0733 42.2551 81.4633 42.2651 73.0133C42.2851 64.4033 35.8151 57.8333 27.2951 57.8233V57.8333Z" fill="currentColor"/>
            <path d="M88.5751 79.8733C87.9051 79.5933 87.1051 79.4633 86.5751 79.0233C77.8151 71.6633 69.0951 64.2733 60.3651 56.8733C59.9351 56.5133 59.6051 56.0433 59.2251 55.6233L59.5351 54.8533C60.3751 55.1833 61.3651 55.3333 62.0151 55.8833C68.9451 61.6733 75.8251 67.5333 82.7251 73.3633C84.3051 74.7033 85.8951 76.0333 87.4551 77.3933C88.0351 77.9033 88.5351 78.5033 89.0651 79.0633C88.8951 79.3333 88.7251 79.5933 88.5651 79.8633L88.5751 79.8733Z" fill="currentColor"/>
            </svg>,
            text: 'Repair',
            image: '/sewingMachine.png',
        },
    ]

    return (
        <div className={styles.circularityPossibilities}>
            <h1>Your circularity possibilities</h1>
            <p className={styles.blurb}>
                Hello {name.split(' ')[0]}! When the life cycle of your clothes has come to an end, you can see your environmentally friendly options here
            </p>
            <div className={styles.container}>
                <div className={styles.verticalContainer}>
                    {
                        // every even index
                        data.map((item, index) => {
                            if (index % 2 === 0) {
                                return (
                                    <div className={styles.possibility} key={index}>
                                        <div className={styles.iconContainer}>
                                            {item.icon}
                                        </div>
                                        <div className={styles.text}>{item.text}</div>
                                        {/* <img className={styles.image} src={item.image} alt="image" /> */}
                                        <img src={item.image} alt="image" className={styles.image}/>
                                    </div>
                                )
                            }
                        })
                    }
                </div>
                <div className={styles.verticalContainer}>
                    {
                        // every odd index
                        data.map((item, index) => {
                            if (index % 2 !== 0) {
                                return (
                                    <div className={styles.possibility} key={index}>
                                        <div className={styles.iconContainer}>
                                            {item.icon}
                                        </div>
                                        <div className={styles.text}>{item.text}</div>
                                        {/* <img className={styles.image} src={item.image} alt="image" /> */}
                                        <img src={item.image} alt="image" className={styles.image}/>
                                    </div>
                                )
                            }
                        })
                    }
                </div>
            </div>
        </div>
    );
}